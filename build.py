#!/usr/bin/python3

SUPPORTED_FEDORA_VERSIONS: list[int] = [38, 39, 40]
SUPPORTED_JAVA_VERSIONS: list[int] = [22]
MANDREL_VERSION: str = "24.0.1.0-Final"


def main() -> None:
    output = """
###############################################################################
# WARNING                                                                     #
# This file is autogenerated. Do NOT edit this file. Run =./build.py= instead #
###############################################################################

trigger:
  - master
pr:
  autoCancel: true
  branches:
    include:
      - master
pool:
  vmImage: ubuntu-latest
jobs:
  - job: BuildQuarkusNative
    displayName: Build & Push Quarkus Native Builder
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:"""
    for f in SUPPORTED_FEDORA_VERSIONS:
        for j in SUPPORTED_JAVA_VERSIONS:
            tag_name = f"quarkus-native-builder:f{f}-j{j}"
            output += f"""
        f{f}-j{j}:
          fedora_version: '{f}'
          mandrel_version: '{MANDREL_VERSION}'
          java_version: '{j}'
          tag: 'f{f}-j{j}'
"""
    output += """
    steps:
      - script: |
          echo "Building on Fedora $(fedora_version), Mandrel $(mandrel_version), Java $(java_version)"
          printf "Using %d threads $(nproc)"
          echo "------------------------------------------------------"
          sed "s/__fedora_version__/$(fedora_version)/g"   -i Dockerfile
          sed "s/__mandrel_version__/$(mandrel_version)/g" -i Dockerfile
          sed "s/__java_version__/22/g"                    -i Dockerfile
          cat Dockerfile
        displayName: Configure Dockerfile

      - task: Docker@2
        displayName: Build & Push $(tag)
        condition: not(eq(variables['Build.Reason'], 'PullRequest'))
        inputs:
          command: buildAndPush
          containerRegistry: docker-hub-login
          repository: mercur3/quarkus-native-builder
          dockerfile: Dockerfile
          tags: |
            $(tag)
            latest

"""
    with open("azure-pipelines.yml", "w") as fd:
        output += "\n"
        print(output)
        fd.write(output)


if __name__ == "__main__":
    main()

