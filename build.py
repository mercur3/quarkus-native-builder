#!/usr/bin/python3

SUPPORTED_FEDORA_VERSIONS: list[int] = [36, 37]
SUPPORTED_JAVA_VERSIONS: list[int] = [11, 17]
MANDREL_VERSION: str = "22.3.4.0-Final"


def main() -> None:
    output = """
###############################################################################
# WARNING                                                                     #
# This file is autogenerated. Do NOT edit this file. Run =./build.py= instead #
###############################################################################

trigger:
  - master
pr:
  autoCancel: true
  branches:
    include:
      - master
pool:
  vmImage: ubuntu-latest
jobs:"""
    for f in SUPPORTED_FEDORA_VERSIONS:
        for j in SUPPORTED_JAVA_VERSIONS:
            tag_name = f"quarkus-native-builder:f{f}-j{j}"
            output += f"""
  - job:
    displayName: Building on Fedora {f}, Java {j}
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: |
          echo "Building the images"
          printf "Using %d threads\\n" $(nproc)
          echo "------------------------------------------------------\\n"
          sed "s/__fedora_version__/{f}/g" -i Dockerfile
          sed "s/__mandrel_version__/{MANDREL_VERSION}/g" -i Dockerfile
          sed "s/__java_version__/{j}/g" -i Dockerfile
          cat Dockerfile
        displayName: Adding the version

      - script: |
          set -e
          docker build -f Dockerfile -t mercur3/{tag_name} .
          echo "------------------------------------------------------\\n"
        displayName: docker build -f Dockerfile -t mercur3/{tag_name} .

      - script: |
          echo "------------------------------------------------------\\n"
          echo "$DOCKER_PASSWORD" | docker login -u mercur3 --password-stdin
          docker push mercur3/{tag_name}
        displayName: docker push mercur3/{tag_name}
        condition: not(eq(variables['Build.Reason'], 'PullRequest'))
        env:
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)

"""
    with open("azure-pipelines.yml", "w") as fd:
        output += "\n"
        print(output)
        fd.write(output)


if __name__ == "__main__":
    main()

